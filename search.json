[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "EPPS6356",
    "section": "",
    "text": "Greetings everyone! Welcome to my personal website. This website is created as a part of the EPPS 6356 Data Visualization class (instructor Dr. Karl Ho) for Fall 2024 session at the University of Texas at Dallas."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Umme Kulsum",
    "section": "",
    "text": "Umme Kulsum is a 3rd year PhD student in the Geospatial Information Sciecnces program under the School of Economics Political and Policy Sciences at the University of Texas at Dallas. She is currently focusing on exploring Human-Rhino Conflicts in Chitwan National Park, Nepal. Her primary interests are Geographic Information System (GIS), Remote Sensing (RS) and Human-environment Interaction.\n\nEducation\nDoctor of Philosophy: (Ongoing) Geospatial Information Sciences Program, School of Economics, Political and Policy Sciences, The University of Texas at Dallas\nMaster of Science: Dept. of Geography and Environment, Jagannath University, Bangladesh\nBachelor of Science: Dept. of Geography and Environment, Jagannath University, Bangladesh\n\n\nWork\nInstructor (May 2024-Aug. 2024): Geospatial Information Sciences Program, The University of Texas at Dallas\nCourse:\n\nGEOG 2303 World Regional Geography\n\nTeaching Assistant (Aug. 2022-Present): Geospatial Information Sciences Program, The University of Texas at Dallas\nCourses:\n\nGISC 6381 Geographic Information Systems Fundamentals; Supervisor: Dr. Yongwan Chun (Fall-2022 and Fall-2023)\nGISC 4382 Applied Geographic Information Systems; Supervisor: Dr. Yongwan Chun (Spring-2023 and Spring-2024)\n\nResearch Officer: Unnayan Shamannay (Non-profit research organization), Dhaka, Bangladesh\nIntern: Ark Foundation (Non-profit research organization), Dhaka, Bangladesh"
  },
  {
    "objectID": "assignment1.html",
    "href": "assignment1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "This page has the contents of Assignment 1 of the EPPS 6356 course for Fall 2024."
  },
  {
    "objectID": "assignment2.html",
    "href": "assignment2.html",
    "title": "Assignment 2",
    "section": "",
    "text": "This page has the contents of Assignment 2 of the EPPS 6356 course for Fall 2024."
  },
  {
    "objectID": "email.html",
    "href": "email.html",
    "title": "",
    "section": "",
    "text": "umme.kulsum@utdallas.edu"
  },
  {
    "objectID": "assignment1.html#anscombe01.r",
    "href": "assignment1.html#anscombe01.r",
    "title": "Assignment 1",
    "section": "1. anscombe01.R",
    "text": "1. anscombe01.R\n\n## Data Visualization\n## Objective: Identify data or model problems using visualization\n## Anscombe (1973) Quartlet\n\ndata(anscombe)  # Load Anscombe's data\nView(anscombe) # View the data\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n## Simple version\nplot(anscombe$x1,anscombe$y1)\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n# Create four model objects\nlm1 &lt;- lm(y1 ~ x1, data=anscombe)\nsummary(lm1)\n\n\nCall:\nlm(formula = y1 ~ x1, data = anscombe)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.92127 -0.45577 -0.04136  0.70941  1.83882 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0001     1.1247   2.667  0.02573 * \nx1            0.5001     0.1179   4.241  0.00217 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6665,    Adjusted R-squared:  0.6295 \nF-statistic: 17.99 on 1 and 9 DF,  p-value: 0.00217\n\nlm2 &lt;- lm(y2 ~ x2, data=anscombe)\nsummary(lm2)\n\n\nCall:\nlm(formula = y2 ~ x2, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.9009 -0.7609  0.1291  0.9491  1.2691 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)    3.001      1.125   2.667  0.02576 * \nx2             0.500      0.118   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6662,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002179\n\nlm3 &lt;- lm(y3 ~ x3, data=anscombe)\nsummary(lm3)\n\n\nCall:\nlm(formula = y3 ~ x3, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.1586 -0.6146 -0.2303  0.1540  3.2411 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0025     1.1245   2.670  0.02562 * \nx3            0.4997     0.1179   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6663,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002176\n\nlm4 &lt;- lm(y4 ~ x4, data=anscombe)\nsummary(lm4)\n\n\nCall:\nlm(formula = y4 ~ x4, data = anscombe)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-1.751 -0.831  0.000  0.809  1.839 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0017     1.1239   2.671  0.02559 * \nx4            0.4999     0.1178   4.243  0.00216 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6667,    Adjusted R-squared:  0.6297 \nF-statistic:    18 on 1 and 9 DF,  p-value: 0.002165\n\nplot(anscombe$x1,anscombe$y1)\nabline(coefficients(lm1))\n\n\n\n\n\n\n\nplot(anscombe$x2,anscombe$y2)\nabline(coefficients(lm2))\n\n\n\n\n\n\n\nplot(anscombe$x3,anscombe$y3)\nabline(coefficients(lm3))\n\n\n\n\n\n\n\nplot(anscombe$x4,anscombe$y4)\nabline(coefficients(lm4))\n\n\n\n\n\n\n\n## Fancy version (per help file)\n\nff &lt;- y ~ x\nmods &lt;- setNames(as.list(1:4), paste0(\"lm\", 1:4))\n\n# Plot using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  ## or   ff[[2]] &lt;- as.name(paste0(\"y\", i))\n  ##      ff[[3]] &lt;- as.name(paste0(\"x\", i))\n  mods[[i]] &lt;- lmi &lt;- lm(ff, data = anscombe)\n  print(anova(lmi))\n}\n\nAnalysis of Variance Table\n\nResponse: y1\n          Df Sum Sq Mean Sq F value  Pr(&gt;F)   \nx1         1 27.510 27.5100   17.99 0.00217 **\nResiduals  9 13.763  1.5292                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y2\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx2         1 27.500 27.5000  17.966 0.002179 **\nResiduals  9 13.776  1.5307                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y3\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx3         1 27.470 27.4700  17.972 0.002176 **\nResiduals  9 13.756  1.5285                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y4\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx4         1 27.490 27.4900  18.003 0.002165 **\nResiduals  9 13.742  1.5269                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nsapply(mods, coef)  # Note the use of this function\n\n                  lm1      lm2       lm3       lm4\n(Intercept) 3.0000909 3.000909 3.0024545 3.0017273\nx1          0.5000909 0.500000 0.4997273 0.4999091\n\nlapply(mods, function(fm) coef(summary(fm)))\n\n$lm1\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0000909  1.1247468 2.667348 0.025734051\nx1          0.5000909  0.1179055 4.241455 0.002169629\n\n$lm2\n            Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.000909  1.1253024 2.666758 0.025758941\nx2          0.500000  0.1179637 4.238590 0.002178816\n\n$lm3\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0024545  1.1244812 2.670080 0.025619109\nx3          0.4997273  0.1178777 4.239372 0.002176305\n\n$lm4\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0017273  1.1239211 2.670763 0.025590425\nx4          0.4999091  0.1178189 4.243028 0.002164602\n\n# Preparing for the plots\nop &lt;- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))\n\n# Plot charts using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  plot(ff, data = anscombe, col = \"red\", pch = 21, bg = \"orange\", cex = 1.2,\n       xlim = c(3, 19), ylim = c(3, 13))\n  abline(mods[[i]], col = \"blue\")\n}\nmtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.5)\n\n\n\n\n\n\n\npar(op)"
  },
  {
    "objectID": "assignment1.html#generative-art",
    "href": "assignment1.html#generative-art",
    "title": "Assignment 1",
    "section": "2. Generative Art",
    "text": "2. Generative Art\nReferences\na. Boden, M. A., & Edmonds, E. A. (2009). What is generative art? Digital Creativity, 20(1-2), 21–46. https://doi.org/10.1080/14626260902867915\nb. Dorin, A., McCabe, J., McCormack, J., Monro, G., & Whitelaw, M. (2012). A framework for understanding generative art. Digital Creativity, 23(3-4), 239–259. https://doi.org/10.1080/14626268.2012.709940\nc. Tempel, M. (2017). Generative art for all. Journal of Innovation and Entrepreneurship, 6(12). https://doi.org/10.1186/s13731-017-0072-1"
  },
  {
    "objectID": "assignment1.html#fall-color",
    "href": "assignment1.html#fall-color",
    "title": "Assignment 1",
    "section": "3. Fall Color",
    "text": "3. Fall Color\nColor: #ffcd50\nTo me, fall is more yellow than orange."
  },
  {
    "objectID": "assignment1.html#critique",
    "href": "assignment1.html#critique",
    "title": "Assignment 1",
    "section": "4. Critique",
    "text": "4. Critique\n\nThis figure was collected from the article named “Mapping understory invasive plant species with field and remotely sensed data in Chitwan, Nepal” by Dai et. al, (2020). This particular chart shows box plots of GV (green vegetation) and Shade fractions between presence (green) and community forest background pixels (orange).\n\nCritique of the Chart:\na. The colors are too bright.\nb. The reference line text is larger than the text inside the chart.\nc. Sectioning of the chart makes it easier to interpret.\nd. Good use of empty spaces with text in both of the sections\ne. Green is not a colorblind friendly color.\nf. The font is uniform.\nReference:\nDai, J., Roberts, D. A., Stow, D. A., An, L., Hall, S. J., Yabiku, S. T., & Kyriakidis, P. C. (2020). Mapping understory invasive plant species with field and remotely sensed data in Chitwan, Nepal. Remote Sensing of Environment, 250, 112037. https://doi.org/10.1016/j.rse.2020.112037"
  },
  {
    "objectID": "assignment2.html#paul-murrell-code-modification",
    "href": "assignment2.html#paul-murrell-code-modification",
    "title": "Assignment 2",
    "section": "1. Paul Murrell Code Modification",
    "text": "1. Paul Murrell Code Modification\n\n### Paul Murrell's R examples (selected)\n\n## Start plotting from basics \n# Note the order\nplot(pressure, pch=19)  # Can you change pch? \n\n# The pch was changed to 19 from 16\ntext(150, 600, \n     \"Pressure (mm Hg)\\nversus\\nTemperature (Celsius)\")\n\n\n\n\n\n\n\n#  Examples of standard high-level plots \n#  In each case, extra output is also added using low-level \n#  plotting functions.\n# \n\n# Setting the parameter (3 rows by 2 cols)\npar(mfrow=c(3, 2))\n\n# Scatterplot\n# Note the incremental additions\n\nx &lt;- c(0.5, 2, 4, 8, 12, 16)\ny1 &lt;- c(1, 1.3, 1.9, 3.4, 3.9, 4.8)\ny2 &lt;- c(4, .8, .5, .45, .4, .3)\n\n# Setting label orientation, margins c(bottom, left, top, right) & text size\npar(las=1, mar=c(4, 4, 2, 4), cex=.7) \nplot.new()\nplot.window(range(x), c(0, 6))\nlines(x, y1)\nlines(x, y2)\npoints(x, y1, pch=16, cex=1) # Try different cex value?  \npoints(x, y2, pch=21, bg=\"lightblue1\", cex=2)  # Different background color\npar(col=\"gray50\", fg=\"gray50\", col.axis=\"gray50\")\naxis(1, at=seq(0, 16, 4)) # What is the first number standing for?\n# The horizontal axis\naxis(2, at=seq(0, 6, 2))\naxis(4, at=seq(0, 6, 2))\nbox(bty=\"u\")\nmtext(\"Travel Time (s)\", side=1, line=2, cex=0.8)\nmtext(\"Responses per Travel\", side=2, line=2, las=0, cex=0.8)\nmtext(\"Responses per Second\", side=4, line=2, las=0, cex=0.8)\ntext(4, 5, \"Bird 131\")\npar(mar=c(5.1, 4.1, 4.1, 2.1), col=\"black\", fg=\"black\", col.axis=\"black\")\n\n# Histogram\n# Random data\nY &lt;- rnorm(50)\n# Make sure no Y exceed [-3.5, 3.5]\nY[Y &lt; -3.5 | Y &gt; 3.5] &lt;- NA # Selection/set range\nx &lt;- seq(-3.5, 3.5, .1)\ndn &lt;- dnorm(x)\npar(mar=c(4.5, 4.1, 3.1, 0))\nhist(Y, breaks=seq(-3.5, 3.5), ylim=c(0, 0.5), \n     col=\"gray80\", freq=FALSE)\nlines(x, dnorm(x), lwd=2)\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\n# Barplot\npar(mar=c(2, 3.1, 2, 2.1)) \nmidpts &lt;- barplot(VADeaths, \n                  col=gray(0.1 + seq(1, 9, 2)/11), \n                  names=rep(\"\", 4))\nmtext(sub(\" \", \"\\n\", colnames(VADeaths)),\n      at=midpts, side=1, line=0.5, cex=0.5)\ntext(rep(midpts, each=5), apply(VADeaths, 2, cumsum) - VADeaths/2,\n     VADeaths, \n     col=rep(c(\"white\", \"black\"), times=3:2), \n     cex=0.8)\npar(mar=c(5.1, 4.1, 4.1, 2.1))  \n\n# Boxplot\npar(mar=c(3, 4.1, 2, 0))\nboxplot(len ~ dose, data = ToothGrowth,\n        boxwex = 0.25, at = 1:3 - 0.2,\n        subset= supp == \"VC\", col=\"white\",\n        xlab=\"\",\n        ylab=\"tooth length\", ylim=c(0,35))\nmtext(\"Vitamin C dose (mg)\", side=1, line=2.5, cex=0.8)\nboxplot(len ~ dose, data = ToothGrowth, add = TRUE,\n        boxwex = 0.25, at = 1:3 + 0.2,\n        \n        subset= supp == \"OJ\")\nlegend(1.5, 9, c(\"Ascorbic acid\", \"Orange juice\"), \n       fill = c(\"white\", \"gray\"), \n       bty=\"n\")\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\n# Persp\nx &lt;- seq(-10, 10, length= 30)\ny &lt;- x\nf &lt;- function(x,y) { r &lt;- sqrt(x^2+y^2); 10 * sin(r)/r }\nz &lt;- outer(x, y, f)\nz[is.na(z)] &lt;- 1\n# 0.5 to include z axis label\npar(mar=c(0, 0.5, 0, 0), lwd=0.5)\npersp(x, y, z, theta = 30, phi = 30, \n      expand = 0.5)\npar(mar=c(5.1, 4.1, 4.1, 2.1), lwd=1)\n\n# Piechart\npar(mar=c(0, 2, 1, 2), xpd=FALSE, cex=0.5)\npie.sales &lt;- c(0.12, 0.3, 0.26, 0.16, 0.04, 0.12)\nnames(pie.sales) &lt;- c(\"Blueberry\", \"Cherry\",\n                      \"Apple\", \"Boston Cream\", \"Other\", \"Vanilla\")\npie(pie.sales, col = gray(seq(0.3,1.0,length=6)))"
  },
  {
    "objectID": "assignment2.html#exercise-can-you-generate-these-charts-individually-try-these-functions",
    "href": "assignment2.html#exercise-can-you-generate-these-charts-individually-try-these-functions",
    "title": "Assignment 2",
    "section": "2. Exercise: Can you generate these charts individually? Try these functions",
    "text": "2. Exercise: Can you generate these charts individually? Try these functions\n\n# Load necessary packages\nlibrary(ggplot2)\nlibrary(rgl)\nlibrary(readxl)\nlibrary(RColorBrewer)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Load data\nhpindex &lt;- read_excel(\"/Users/ummekulsum/Library/CloudStorage/Box-Box/WorkingDirectory/Fall 2024/EPPS6356/Assignments/hpindex.xlsx\")\n\nNew names:\n• `` -&gt; `...4`\n\n# Filter \nHPI_filter &lt;- (hpindex[, c(\"Country\", 'Continent', \"Population(t)\", \"Life_Expectancy(y)\", \"Wellbeing\", \"tCO2e\", \"HPI\", \"CO2_threshold(tCO2e)\", \"GDP_per_capita\")])\n\n# i. par() and iv. axis() function\npar(mfrow = c(1, 2), family = \"Palatino\",\n    cex.main = 0.8, cex.lab = 0.8, font.main = 2, font.lab = 1, font.axis = 1)\nplot(HPI_filter$`Life_Expectancy(y)`, HPI_filter$tCO2e, pch = 16, col = \"steelblue\",  main = \"Carbon Footprint \\nvs \\nLife Expectancy \",\n     xlab = \"Life Expectancy in years\", ylab = \"Carbon Footprint in tons of CO2 equivalent\",\n     ylim = c(-5, 50), \n     yaxt = 'n', yaxs = 'i')\naxis(2, at = seq(0 , 40, by = 10), labels = c('0', '', '20', '', '40' ))\nplot(HPI_filter$`Life_Expectancy(y)`, HPI_filter$GDP_per_capita/1e6, pch = 19, col = \"violetred1\", \n     main = \"GDP \\n vs\\n Life Expectancy\", xlab = \"Life Expectancy in years\", \n     ylab = \"GDP per Capita (in Millions $)\",\n     ylim = c(-0.01, 0.14), \n     yaxt = \"n\", yaxs = \"i\")\naxis(2, at = seq(0, 0.12, by = 0.02), labels = c(\"0\", \"\", \"0.04\", \"\", \"0.08\", \"\", \"0.12\"))\n\n\n\n\n\n\n\npar(mfrow = c(1, 1))  # Reset to default layout\n\n## ix. Boxplot\npar(mfrow = c(1, 1), family = \"Palatino\", cex.main = 1.2, cex.lab = 1.1)\n\n# Boxplot: Population per Continent\nboxplot(HPI_filter$`Population(t)`/1e3 ~ HPI_filter$Continent, \n        xlab = \"Population (in Million)\", \n        ylab = \"Continent\", \n        ylim = c(0, 350),\n        main = \"Boxplot of Population per Continent\", \n        col = \"orange\", \n        horizontal = TRUE, \n        las = 1)\n\n\n\n\n\n\n\n# hist() function \npar(mfrow = c(1, 1), family = \"Palatino\", \n    cex.main = 1.2, cex.lab = 1.2, font.main = 2, font.lab = 1, font.axis = 1)\nhist(na.omit(HPI_filter$HPI), \n     main = \"Histogram of Happy Index\",\n     xlab = \"Happy Index\", \n     col = \"lightblue2\", \n     prob = TRUE)\nlines(density(na.omit(HPI_filter$HPI)), col = \"black\", lwd = 2)\n\n\n\n\n\n\n\n# ii. lines(), iii. points(), v, box(), x. legend() and vi. text()\npar(mfrow = c(1, 1), family = \"Palatino\",\n    cex.main = 1.3, cex.lab = 1.1, font.main = 2, font.lab = 1, font.axis = 1)\nplot(HPI_filter$`Life_Expectancy(y)`, HPI_filter$GDP_per_capita, \n     type = \"n\", main = \"Life Expectancy vs GDP\", \n     xlab = \"Life Expectancy (years)\", \n     ylab = \"GDP per Capita ($)\")\n\n# points and lines\nlines(HPI_filter$`Life_Expectancy(y)`, HPI_filter$GDP_per_capita, col = \"lightgreen\")\npoints(HPI_filter$`Life_Expectancy(y)`, HPI_filter$GDP_per_capita, pch = 16, col = \"blue\")\n\n# box\nbox(lwd = 2, col = \"black\")\n\n#  custom text\ntext(70, 100000, \"High GDP Region\", col = \"Black\", cex = 1.2, cex.main = 2)\n\n# legend\nlegend(\"topleft\", legend = c(\"GDP Data\"), col = c(\"red\"), pch = c(16), lty = c(1), lwd = 2)\n\n\n\n\n\n\n\n# xi. persp() and xiii. pie() \n\n# 3D Perspective Plot: Wellbeing vs GDP per Capita and Life Expectancy\nx &lt;- HPI_filter$`Life_Expectancy(y)`\ny &lt;- HPI_filter$GDP_per_capita\nz &lt;- HPI_filter$Wellbeing\n\n# Creating a grid for the perspective plot\nx_grid &lt;- seq(min(x, na.rm = TRUE), max(x, na.rm = TRUE), length = 30)\ny_grid &lt;- seq(min(y, na.rm = TRUE), max(y, na.rm = TRUE), length = 30)\n\n# fuction for z grid\nz_function &lt;- function(x, y) {\n  z_val &lt;- (x + y) / 2\n  return(z_val)\n}\n\nz_grid &lt;- outer(x_grid, y_grid, FUN = z_function)\n\n# 3D perspective plot\npar(mfrow = c(1, 1), family = \"Palatino\",\n    cex.main = 1.3, cex.lab = 0.8, font.main = 2, font.lab = 1, font.axis = 1)\npersp(x_grid, y_grid, z_grid, theta = 30, phi = 20, col = \"lightblue\", \n      main = \"3D Perspective Plot: Wellbeing vs Life Expectancy and GDP\", \n      xlab = \"Life Expectancy\", ylab = \"GDP per Capita\", zlab = \"Wellbeing\")\n\n\n\n\n\n\n\n# Calculating average HPI per continent\nHPI_avg_per_continent &lt;- HPI_filter %&gt;%\n  group_by(Continent) %&gt;%\n  summarize(avg_HPI = mean(HPI, na.rm = TRUE))\n\n#Spectral color palette\nspectral_colors &lt;- brewer.pal(length(HPI_avg_per_continent$avg_HPI), \"Spectral\")\n\n# percentage\npct &lt;- round(HPI_avg_per_continent$avg_HPI / sum(HPI_avg_per_continent$avg_HPI) * 100)\nlabels &lt;- paste0(pct, \"%\")  \n\n# Pie Chart\npie(HPI_avg_per_continent$avg_HPI, \n    labels = labels,  \n    main = \"Average HPI per Continent\", \n    col = spectral_colors)\n\n# Legend\nlegend(\"topright\", legend = HPI_avg_per_continent$Continent, \n       fill = spectral_colors, title = \"Continents\")"
  },
  {
    "objectID": "preparefclass4.html#hadley-wickham-data-visualization-and-data-science",
    "href": "preparefclass4.html#hadley-wickham-data-visualization-and-data-science",
    "title": "Prepare for Class 4",
    "section": "2. Hadley Wickham: Data Visualization and Data Science",
    "text": "2. Hadley Wickham: Data Visualization and Data Science\nDr. Wickham introduced tidyverse, which is the combination of ggplot2, dplyr, tidyr purr packages.\nThe main points of the video is data visualization. However, data preparation was also emphasized to get a good visualization. Tidy data is important to get a good visualization. HE demonstrated how he cleaned and arranged data for the purpose of creating a chart. The famous GDP per Capita vs Life Expectancy chart of Hans Rosling was recreated using ggplot2 and a demonstration for how to customize the chart and make it an animation was also given.\nSome points made by Dr. Wickham\nPower of Code\n\nit may look overwhelming but it has a lot of opportunity because it is basically text\nit is readable.\nit is reproducible. One can reproduce the same thing with a different dataset and do not have to think about missing any steps."
  },
  {
    "objectID": "preparefclass5.html#hadley-wickham-data-visualization-and-data-science",
    "href": "preparefclass5.html#hadley-wickham-data-visualization-and-data-science",
    "title": "Prepare for Class 5",
    "section": "2. Hadley Wickham: Data Visualization and Data Science",
    "text": "2. Hadley Wickham: Data Visualization and Data Science\nDr. Wickham introduced tidyverse, which is the combination of ggplot2, dplyr, tidyr purr packages.\nThe main points of the video is data visualization. However, data preparation was also emphasized to get a good visualization. Tidy data is important to get a good visualization. He demonstrated how he cleaned and arranged data for the purpose of creating a chart. The famous GDP per Capita vs Life Expectancy chart of Hans Rosling was recreated using ggplot2 and a demonstration for how to customize the chart and make it an animation was also given.\nSome points made by Dr. Wickham\nPower of Code\n\nit may look overwhelming but it has a lot of opportunity because it is basically text\nit is readable.\nit is reproducible. One can reproduce the same thing with a different dataset and do not have to think about missing any steps."
  },
  {
    "objectID": "assignment3.html",
    "href": "assignment3.html",
    "title": "Assignment 3",
    "section": "",
    "text": "# Scatterplot\n# Data preparation for plotting. This data is incremental. \n\nx &lt;- c(0.5, 2, 4, 8, 12, 16)\ny1 &lt;- c(1, 1.3, 1.9, 3.4, 3.9, 4.8)\ny2 &lt;- c(4, .8, .5, .45, .4, .3)\n\n# Setting label orientation, margins c(bottom, left, top, right) & text size\npar(las=1, mar=c(4, 4, 2, 4), cex=.7) \n# This line sets parameters for the axis\n# par() function sets the different graphical parameters\n# las = 1 means the means that the axis labels will be horizonral\n#  mar=c(4, 4, 2, 4) indicates the margins of the plot.It means the bottom = 4 lines, left = 4 lines, top = 2 lines and right = 4 lines.  \n\nplot.new() # An empty plot window \nplot.window(range(x), c(0, 6)) # Defines the plotting area by coordinates. In this case, the range(x) function sets the limits of x-axis with the values of x and c(0,6) limits the y-axis from 0 to 6. \nlines(x, y1) # adding line to the existing plot with values of x and y1\nlines(x, y2) # adding line to the existing plot with values of x and y1\npoints(x, y1, pch=16, cex=2) # Plotting points to the existing plot on x and y1 values with solid circles and regular relative size\npoints(x, y2, pch=21, bg=\"lightblue1\", cex=2)  # Here the fill color is light blue and the point size is twice as big than the first line \npar(col=\"gray50\", fg=\"gray50\", col.axis=\"gray50\") # sets global values for plot elements to gray50. fg = \"gray50\" sets the global foreground color to gray 50 and col.axis sets the color of axis elements to gray50. \naxis(1, at=seq(0, 16, 4)) # Sets the range and break values of the horixzontal axis. The axis will show ticks for 0-16 with an interval of 4. \naxis(2, at=seq(0, 6, 2)) # Sets the range and break values of the first y axis. The axis will show ticks for 0-6 with an interval of 2. \naxis(4, at=seq(0, 6, 2)) # Sets the range and break values of the second axis. The axis will show ticks for 0-6 with an interval of 2. \nbox(bty=\"u\") # adds a box to the plot where bty = u means the box will only appear on left, bottom and right side\nmtext(\"Travel Time (s)\", side=1, line=2, cex=0.8) # adds text to the bottom (x axis) of the plot starting 2 lines away from the axis and cex = 0.8 means the text size is reduced to 80% of the default size\nmtext(\"Responses per Travel\", side=2, line=2, las=0, cex=0.8) # adds text to the left (y1 axis) of the plot starting 2 lines away from the axis and cex = 0.8 means the text size is reduced to 80% of the default size\nmtext(\"Responses per Second\", side=4, line=2, las=0, cex=0.8) # adds text to the right (y2 axis) of the plot starting 2 lines away from the axis and cex = 0.8 means the text size is reduced to 80% of the default size. \ntext(4, 5, \"Bird 131\") # adds a custom text on the x =4, y = 5 coordinate\n\n\n\n\n\n\n\npar(mar=c(5.1, 4.1, 4.1, 2.1), col=\"black\", fg=\"black\", col.axis=\"black\") # Resets the plot parameter values where mar=c(5.1, 4.1, 4.1, 2.1) is the plot margins, col = \"black\" is the default color, fg = \"black\" sets the foreground color to black and col.axis = \"black\" sets the default axis color to black"
  },
  {
    "objectID": "assignment3.html#configuring-chart-by-adding-comments",
    "href": "assignment3.html#configuring-chart-by-adding-comments",
    "title": "Assignment 3",
    "section": "",
    "text": "# Scatterplot\n# Data preparation for plotting. This data is incremental. \n\nx &lt;- c(0.5, 2, 4, 8, 12, 16)\ny1 &lt;- c(1, 1.3, 1.9, 3.4, 3.9, 4.8)\ny2 &lt;- c(4, .8, .5, .45, .4, .3)\n\n# Setting label orientation, margins c(bottom, left, top, right) & text size\npar(las=1, mar=c(4, 4, 2, 4), cex=.7) \n# This line sets parameters for the axis\n# par() function sets the different graphical parameters\n# las = 1 means the means that the axis labels will be horizonral\n#  mar=c(4, 4, 2, 4) indicates the margins of the plot.It means the bottom = 4 lines, left = 4 lines, top = 2 lines and right = 4 lines.  \n\nplot.new() # An empty plot window \nplot.window(range(x), c(0, 6)) # Defines the plotting area by coordinates. In this case, the range(x) function sets the limits of x-axis with the values of x and c(0,6) limits the y-axis from 0 to 6. \nlines(x, y1) # adding line to the existing plot with values of x and y1\nlines(x, y2) # adding line to the existing plot with values of x and y1\npoints(x, y1, pch=16, cex=2) # Plotting points to the existing plot on x and y1 values with solid circles and regular relative size\npoints(x, y2, pch=21, bg=\"lightblue1\", cex=2)  # Here the fill color is light blue and the point size is twice as big than the first line \npar(col=\"gray50\", fg=\"gray50\", col.axis=\"gray50\") # sets global values for plot elements to gray50. fg = \"gray50\" sets the global foreground color to gray 50 and col.axis sets the color of axis elements to gray50. \naxis(1, at=seq(0, 16, 4)) # Sets the range and break values of the horixzontal axis. The axis will show ticks for 0-16 with an interval of 4. \naxis(2, at=seq(0, 6, 2)) # Sets the range and break values of the first y axis. The axis will show ticks for 0-6 with an interval of 2. \naxis(4, at=seq(0, 6, 2)) # Sets the range and break values of the second axis. The axis will show ticks for 0-6 with an interval of 2. \nbox(bty=\"u\") # adds a box to the plot where bty = u means the box will only appear on left, bottom and right side\nmtext(\"Travel Time (s)\", side=1, line=2, cex=0.8) # adds text to the bottom (x axis) of the plot starting 2 lines away from the axis and cex = 0.8 means the text size is reduced to 80% of the default size\nmtext(\"Responses per Travel\", side=2, line=2, las=0, cex=0.8) # adds text to the left (y1 axis) of the plot starting 2 lines away from the axis and cex = 0.8 means the text size is reduced to 80% of the default size\nmtext(\"Responses per Second\", side=4, line=2, las=0, cex=0.8) # adds text to the right (y2 axis) of the plot starting 2 lines away from the axis and cex = 0.8 means the text size is reduced to 80% of the default size. \ntext(4, 5, \"Bird 131\") # adds a custom text on the x =4, y = 5 coordinate\n\n\n\n\n\n\n\npar(mar=c(5.1, 4.1, 4.1, 2.1), col=\"black\", fg=\"black\", col.axis=\"black\") # Resets the plot parameter values where mar=c(5.1, 4.1, 4.1, 2.1) is the plot margins, col = \"black\" is the default color, fg = \"black\" sets the foreground color to black and col.axis = \"black\" sets the default axis color to black"
  },
  {
    "objectID": "assignment3.html#comparing-regression-models",
    "href": "assignment3.html#comparing-regression-models",
    "title": "Assignment 3",
    "section": "2. Comparing Regression Models",
    "text": "2. Comparing Regression Models\n\ndata(anscombe)  # Load Anscombe's data\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n# Create four model objects\nlm1 &lt;- lm(y1 ~ x1, data=anscombe)\nlm2 &lt;- lm(y2 ~ x2, data=anscombe)\nlm3 &lt;- lm(y3 ~ x3, data=anscombe)\nlm4 &lt;- lm(y4 ~ x4, data=anscombe)\nsummary(lm1)\n\n\nCall:\nlm(formula = y1 ~ x1, data = anscombe)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.92127 -0.45577 -0.04136  0.70941  1.83882 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0001     1.1247   2.667  0.02573 * \nx1            0.5001     0.1179   4.241  0.00217 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6665,    Adjusted R-squared:  0.6295 \nF-statistic: 17.99 on 1 and 9 DF,  p-value: 0.00217\n\nsummary(lm2)\n\n\nCall:\nlm(formula = y2 ~ x2, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.9009 -0.7609  0.1291  0.9491  1.2691 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)    3.001      1.125   2.667  0.02576 * \nx2             0.500      0.118   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6662,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002179\n\nsummary(lm3)\n\n\nCall:\nlm(formula = y3 ~ x3, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.1586 -0.6146 -0.2303  0.1540  3.2411 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0025     1.1245   2.670  0.02562 * \nx3            0.4997     0.1179   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6663,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002176\n\nsummary(lm4)\n\n\nCall:\nlm(formula = y4 ~ x4, data = anscombe)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-1.751 -0.831  0.000  0.809  1.839 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0017     1.1239   2.671  0.02559 * \nx4            0.4999     0.1178   4.243  0.00216 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6667,    Adjusted R-squared:  0.6297 \nF-statistic:    18 on 1 and 9 DF,  p-value: 0.002165\n\n\nAll four of the models show that the Multiple R Squared is 0.66 and the Adjusted R Square is 0.62. This means that 62% of the variation in dependent variable can be explained by the independent variable for each of the four models."
  },
  {
    "objectID": "assignment3.html#comparing-anscombe01.r",
    "href": "assignment3.html#comparing-anscombe01.r",
    "title": "Assignment 3",
    "section": "2. Comparing anscombe01.R",
    "text": "2. Comparing anscombe01.R\n\na. Comparing Regression Models\n\ndata(anscombe)  # Load Anscombe's data\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n# Create four model objects\nlm1 &lt;- lm(y1 ~ x1, data=anscombe)\nlm2 &lt;- lm(y2 ~ x2, data=anscombe)\nlm3 &lt;- lm(y3 ~ x3, data=anscombe)\nlm4 &lt;- lm(y4 ~ x4, data=anscombe)\nsummary(lm1)\n\n\nCall:\nlm(formula = y1 ~ x1, data = anscombe)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.92127 -0.45577 -0.04136  0.70941  1.83882 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0001     1.1247   2.667  0.02573 * \nx1            0.5001     0.1179   4.241  0.00217 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6665,    Adjusted R-squared:  0.6295 \nF-statistic: 17.99 on 1 and 9 DF,  p-value: 0.00217\n\nsummary(lm2)\n\n\nCall:\nlm(formula = y2 ~ x2, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.9009 -0.7609  0.1291  0.9491  1.2691 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)    3.001      1.125   2.667  0.02576 * \nx2             0.500      0.118   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6662,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002179\n\nsummary(lm3)\n\n\nCall:\nlm(formula = y3 ~ x3, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.1586 -0.6146 -0.2303  0.1540  3.2411 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0025     1.1245   2.670  0.02562 * \nx3            0.4997     0.1179   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6663,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002176\n\nsummary(lm4)\n\n\nCall:\nlm(formula = y4 ~ x4, data = anscombe)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-1.751 -0.831  0.000  0.809  1.839 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0017     1.1239   2.671  0.02559 * \nx4            0.4999     0.1178   4.243  0.00216 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6667,    Adjusted R-squared:  0.6297 \nF-statistic:    18 on 1 and 9 DF,  p-value: 0.002165\n\n\nAll four of the models show that the Multiple R Squared is 0.66 and the Adjusted R Square is 0.62. This means that 62% of the variation in dependent variable can be explained by the independent variable for each of the four models. However, when plotted, the scenario is different. In case of model 4 (lm4) an outlier cases the R-squared to be 0.66 showing a relationship. In case of model 2, it is polynomial.\n\n\nb. Comparing Ways to Create Plot\nProvided plots an be fined tuned by changing color, point shapes, the trendline shapes, axis labels, color of axis labels, title, background etc. The plots can be customized without any packages by manually changing each elements or they can be created using tidyverse or ggplot package. Simply changing a theme will change the background color as well as how other elements are portrayed in a plot."
  },
  {
    "objectID": "assignment3.html#fine-tuning-with-other-packages",
    "href": "assignment3.html#fine-tuning-with-other-packages",
    "title": "Assignment 3",
    "section": "3. Fine-tuning with other packages",
    "text": "3. Fine-tuning with other packages\n\n# Load necessary packages\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\npar( family = \"serif\",\n    cex.main = 0.8, cex.lab = 0.8, font.main = 2, font.lab = 1, font.axis = 1, col.axis = \"gray50\", fg = 'gray50')\nggplot(anscombe, aes(x = x1, y = y1)) +\n  geom_point(shape = 21, fill = \"lightblue2\", color = \"blue\", size = 3) +  \n  geom_text( label=\"★\", size = 2,  family = \"HiraKakuPro-W3\") +\n  geom_abline(intercept = coef(lm1)[1], slope = coef(lm1)[2], color = 'dodgerblue4', size = 0.8) + \n  labs(x = \"X1\", y = \"Y1\") +  \n  theme_light() +\n  theme(panel.grid = element_blank())\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\nggplot(anscombe, aes(x = x2, y = y2)) +\n  geom_point(shape = 21, fill = \"red\", color = \"darkorchid\", size = 3) +  \n  geom_text( label=\"★\", size = 2,  family = \"HiraKakuPro-W3\") +\n  geom_abline(intercept = coef(lm1)[1], slope = coef(lm1)[2], color = 'dodgerblue4', size = 0.8) + \n  labs(x = \"X2\", y = \"Y2\") +  \n  theme_light() +\n  theme(panel.grid = element_blank())\n\n\n\n\n\n\n\nggplot(anscombe, aes(x = x3, y = y3)) +\n  geom_point(shape = 21, fill = \"hotpink2\", color = \"maroon2\", size = 3) +  \n  geom_text( label=\"★\", size = 2,  family = \"HiraKakuPro-W3\") +\n  geom_abline(intercept = coef(lm1)[1], slope = coef(lm1)[2], color = 'dodgerblue4', size = 0.8) + \n  labs(x = \"X3\", y = \"Y3\") +  \n  theme_light() +\n  theme(panel.grid = element_blank())\n\n\n\n\n\n\n\nggplot(anscombe, aes(x = x4, y = y4)) +\n  geom_point(shape = 21, fill = \"darkgoldenrod2\", color = \"darkred\", size = 3) +  \n  geom_text( label=\"★\", size = 2,  family = \"HiraKakuPro-W3\") +\n  geom_abline(intercept = coef(lm1)[1], slope = coef(lm1)[2], color = 'dodgerblue4', size = 0.8) + \n  labs(x = \"X4\", y = \"Y4\") +  \n  theme_light() +\n  theme(panel.grid = element_blank())"
  },
  {
    "objectID": "assignment3.html#fine-tuning",
    "href": "assignment3.html#fine-tuning",
    "title": "Assignment 3",
    "section": "3. Fine Tuning",
    "text": "3. Fine Tuning\nplot(anscombe$x1,anscombe$y1, pch = 21, bg = “blue”, col = ‘steelblue3’, cex = 1.5, xlab = “X1”, ylab = “Y1”)\nabline(coefficients(lm1), col = “green”)\n\n# Provided Plot \n\n\npar(mfrow = c(2,2), mar=c(4, 4, 2, 4), family = 'serif', col=\"gray50\", fg=\"gray50\", bg= \"white\", col.axis=\"gray50\") \n\n\nplot(anscombe$x1,anscombe$y1, pch = 21, bg = \"steelblue3\", col = 'blue', cex = 1.5,  xlab = \"X1\", ylab = \"Y1\")\nabline(coefficients(lm1), col = 'dodgerblue4', lwd = 1.5)\ntext(anscombe$x1, anscombe$y1, labels = \"\\u2605\", col = \"black\", cex = 0.5, family = \"HiraKakuPro-W3\")\n\nplot(anscombe$x2,anscombe$y2, pch =21, bg = 'red', col = \"darkorchid\", cex = 1.5, xlab = \"X2\", ylab = \"Y2\")\nabline(coefficients(lm2), col = 'dodgerblue4', lwd = 1.5  )\ntext(anscombe$x2, anscombe$y2, labels = \"\\u2605\", col = \"black\", cex = 0.5, family = \"HiraKakuPro-W3\")\n\n\nplot(anscombe$x3,anscombe$y3, pch = 21, bg = \"hotpink2\", col = \"maroon2\", cex = 1.5, xlab = \"X3\", ylab = \"Y3\" )\nabline(coefficients(lm3), col = 'dodgerblue4', lwd = 1.5)\ntext(anscombe$x3, anscombe$y3, labels = \"\\u2605\", col = \"black\", cex = 0.5, family = \"HiraKakuPro-W3\")\n\n\nplot(anscombe$x4, anscombe$y4, pch = 21, bg = \"darkgoldenrod2\", col = \"darkred\", cex = 1.5, xlab = \"X4\", ylab = \"Y4\" )\nabline(coefficients(lm4), col = 'black', lwd = 1.5)\ntext(anscombe$x4, anscombe$y4, labels = \"\\u2605\", col = \"black\", cex = 0.5, family = \"HiraKakuPro-W3\")"
  },
  {
    "objectID": "assignment3.html#ggplot",
    "href": "assignment3.html#ggplot",
    "title": "Assignment 3",
    "section": "3. ggplot",
    "text": "3. ggplot\n\n# Load necessary packages\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\npar( family = \"serif\",\n    cex.main = 0.8, cex.lab = 0.8, font.main = 2, font.lab = 1, font.axis = 1, col.axis = \"gray50\", fg = 'gray50')\nplot1 &lt;- ggplot(anscombe, aes(x = x1, y = y1)) +\n  geom_point(shape = 21, fill = \"lightblue2\", color = \"blue\", size = 3) +  \n  geom_text( label=\"★\", size = 2,  family = \"HiraKakuPro-W3\") +\n  geom_abline(intercept = coef(lm1)[1], slope = coef(lm1)[2], color = 'dodgerblue4', size = 0.8) + \n  labs(x = \"X1\", y = \"Y1\") +  \n  theme_light() +\n  theme(panel.grid = element_blank())\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\nplot2 &lt;- ggplot(anscombe, aes(x = x2, y = y2)) +\n  geom_point(shape = 21, fill = \"red\", color = \"darkorchid\", size = 3) +  \n  geom_text( label=\"★\", size = 2,  family = \"HiraKakuPro-W3\") +\n  geom_abline(intercept = coef(lm1)[1], slope = coef(lm1)[2], color = 'dodgerblue4', size = 0.8) + \n  labs(x = \"X2\", y = \"Y2\") +  \n  theme_light() +\n  theme(panel.grid = element_blank())\n\nplot3 &lt;- ggplot(anscombe, aes(x = x3, y = y3)) +\n  geom_point(shape = 21, fill = \"hotpink2\", color = \"maroon2\", size = 3) +  \n  geom_text( label=\"★\", size = 2,  family = \"HiraKakuPro-W3\") +\n  geom_abline(intercept = coef(lm1)[1], slope = coef(lm1)[2], color = 'dodgerblue4', size = 0.8) + \n  labs(x = \"X3\", y = \"Y3\") +  \n  theme_light() +\n  theme(panel.grid = element_blank())\n\n\nplot4 &lt;- ggplot(anscombe, aes(x = x4, y = y4)) +\n  geom_point(shape = 21, fill = \"darkgoldenrod2\", color = \"darkred\", size = 3) +  \n  geom_text( label=\"★\", size = 2,  family = \"HiraKakuPro-W3\") +\n  geom_abline(intercept = coef(lm1)[1], slope = coef(lm1)[2], color = 'dodgerblue4', size = 0.8) + \n  labs(x = \"X4\", y = \"Y4\") +  \n  theme_light() +\n  theme(panel.grid = element_blank())\n\ngridExtra::grid.arrange(plot1, plot2, plot3, plot4)"
  },
  {
    "objectID": "assignment3.html#tidyverse",
    "href": "assignment3.html#tidyverse",
    "title": "Assignment 3",
    "section": "4. Tidyverse",
    "text": "4. Tidyverse\n\n# Load necessary packages\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\npar( family = \"serif\",\n    cex.main = 0.8, cex.lab = 0.8, font.main = 2, font.lab = 1, font.axis = 1, col.axis = \"gray50\", fg = 'gray50')\nplot1 &lt;- ggplot(anscombe, aes(x = x1, y = y1)) +\n  geom_point(shape = 21, fill = \"lightblue2\", color = \"blue\", size = 3) +  \n  geom_text( label=\"★\", size = 2,  family = \"HiraKakuPro-W3\") +\n  geom_abline(intercept = coef(lm1)[1], slope = coef(lm1)[2], color = 'dodgerblue4', size = 0.8) + \n  labs(x = \"X1\", y = \"Y1\") +  \n  theme_light() +\n  theme(panel.grid = element_blank())\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\nplot2 &lt;- ggplot(anscombe, aes(x = x2, y = y2)) +\n  geom_point(shape = 21, fill = \"red\", color = \"darkorchid\", size = 3) +  \n  geom_text( label=\"★\", size = 2,  family = \"HiraKakuPro-W3\") +\n  geom_abline(intercept = coef(lm1)[1], slope = coef(lm1)[2], color = 'dodgerblue4', size = 0.8) + \n  labs(x = \"X2\", y = \"Y2\") +  \n  theme_light() +\n  theme(panel.grid = element_blank())\n\nplot3 &lt;- ggplot(anscombe, aes(x = x3, y = y3)) +\n  geom_point(shape = 21, fill = \"hotpink2\", color = \"maroon2\", size = 3) +  \n  geom_text( label=\"★\", size = 2,  family = \"HiraKakuPro-W3\") +\n  geom_abline(intercept = coef(lm1)[1], slope = coef(lm1)[2], color = 'dodgerblue4', size = 0.8) + \n  labs(x = \"X3\", y = \"Y3\") +  \n  theme_light() +\n  theme(panel.grid = element_blank())\n\n\nplot4 &lt;- ggplot(anscombe, aes(x = x4, y = y4)) +\n  geom_point(shape = 21, fill = \"darkgoldenrod2\", color = \"darkred\", size = 3) +  \n  geom_text( label=\"★\", size = 2,  family = \"HiraKakuPro-W3\") +\n  geom_abline(intercept = coef(lm1)[1], slope = coef(lm1)[2], color = 'dodgerblue4', size = 0.8) + \n  labs(x = \"X4\", y = \"Y4\") +  \n  theme_light() +\n  theme(panel.grid = element_blank())\n\ngridExtra::grid.arrange(plot1, plot2, plot3, plot4)"
  },
  {
    "objectID": "assignment3.html#pre-hackathon",
    "href": "assignment3.html#pre-hackathon",
    "title": "Assignment 3",
    "section": "5. Pre Hackathon",
    "text": "5. Pre Hackathon\nIn a separate section."
  },
  {
    "objectID": "preparefclass4.html",
    "href": "preparefclass4.html",
    "title": "Prepare for Class 4",
    "section": "",
    "text": "Data analysis is about turning information into conclusion\nAnalytical thinking is about assessing and evaluating the relationship about information\nThe purpose of data display\n\nreasoning about content\n\nThe principles of thinking and showing are directly derived from analytical thinking\nAnalytical thinking\n\nexplain something\ndiscover mechanisms\nfind causes and effects\n\nAnalytical presentation\n\nfundamental task in data visualization\nmake smart comparisons and show them\n\nAnalytical display\n\nthe fundamental task is to assist the viewer’s cognitive task in looking for evidence\n\nAdvises:\n\nhave an open mind and not empty hand\nentertain new ideas while maintaining the same ideas of evidence conclusion\nThe real payoff is to learn the truth \nFor a successful technology, reality must take precedence over public relations, for nature cannot be fooled \n\nThe crisis in data analysis\n\nmost published studies are false\n40,000 articles are compromised\nThe parable of google flu\n\ngoogle flu - it should be human flue\nclassic case of overfitting\noverfitting is not only fitting the data. It also means fitting the random error in the data\n\nTraps in big data analysis\n\nThe data may not contain the answer. And, if you torture the data long enough, it will tell you anything ———John W Tukey\nReplication crisis in social science. studies are now proving to be difficult to replicate\nAnalyzing human behavior isn’t rocket science It’s harder than rocket science \n\n\nThe point of data analysis is \n\nto use empirical information to learn about the world\nto describe and explain something\nto find causes and effect\nto advance our understanding\nto get it right\nto learn and tell the truth\n\nPhilip’s Curve\n\na curve between unemployment and inflation\n6 noble prizes trying to rescue this curve"
  },
  {
    "objectID": "preparefclass4.html#some-notes-from-edward-tuftes-presentation-in-2016",
    "href": "preparefclass4.html#some-notes-from-edward-tuftes-presentation-in-2016",
    "title": "Prepare for Class 4",
    "section": "",
    "text": "Data analysis is about turning information into conclusion\nAnalytical thinking is about assessing and evaluating the relationship about information\nThe purpose of data display\n\nreasoning about content\n\nThe principles of thinking and showing are directly derived from analytical thinking\nAnalytical thinking\n\nexplain something\ndiscover mechanisms\nfind causes and effects\n\nAnalytical presentation\n\nfundamental task in data visualization\nmake smart comparisons and show them\n\nAnalytical display\n\nthe fundamental task is to assist the viewer’s cognitive task in looking for evidence\n\nAdvises:\n\nhave an open mind and not empty hand\nentertain new ideas while maintaining the same ideas of evidence conclusion\nThe real payoff is to learn the truth \nFor a successful technology, reality must take precedence over public relations, for nature cannot be fooled \n\nThe crisis in data analysis\n\nmost published studies are false\n40,000 articles are compromised\nThe parable of google flu\n\ngoogle flu - it should be human flue\nclassic case of overfitting\noverfitting is not only fitting the data. It also means fitting the random error in the data\n\nTraps in big data analysis\n\nThe data may not contain the answer. And, if you torture the data long enough, it will tell you anything ———John W Tukey\nReplication crisis in social science. studies are now proving to be difficult to replicate\nAnalyzing human behavior isn’t rocket science It’s harder than rocket science \n\n\nThe point of data analysis is \n\nto use empirical information to learn about the world\nto describe and explain something\nto find causes and effect\nto advance our understanding\nto get it right\nto learn and tell the truth\n\nPhilip’s Curve\n\na curve between unemployment and inflation\n6 noble prizes trying to rescue this curve"
  },
  {
    "objectID": "preparefclass6.html",
    "href": "preparefclass6.html",
    "title": "Prepare for Class 6",
    "section": "",
    "text": "Emphasize on cleaner visualization, free of junk, noise and over-decoration. Advocates for simpler visualization that general people can interpret easily. Advises to be mindful of colors that clash with each other.\n\n\n\nEmphasizes on a more cleaned and tidy data that makes visualization easier."
  },
  {
    "objectID": "preparefclass6.html#edward-tufte",
    "href": "preparefclass6.html#edward-tufte",
    "title": "Prepare for Class 6",
    "section": "",
    "text": "Emphasize on cleaner visualization, free of junk, noise and over-decoration. Advocates for simpler visualization that general people can interpret easily. Advises to be mindful of colors that clash with each other."
  },
  {
    "objectID": "preparefclass6.html#hadley-wickham",
    "href": "preparefclass6.html#hadley-wickham",
    "title": "Prepare for Class 6",
    "section": "",
    "text": "Emphasizes on a more cleaned and tidy data that makes visualization easier."
  },
  {
    "objectID": "prehackathon.html",
    "href": "prehackathon.html",
    "title": "Pre Hackathon",
    "section": "",
    "text": "Pre-hackathon by Team GeoVIS\n\n# Clear environment\nrm(list = ls())\n\n# libraries\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(lubridate)\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\nlibrary(scales)\n\n# Load the data from OWID GitHub\nowideu &lt;- read.csv(\"https://github.com/owid/covid-19-data/blob/master/public/data/owid-covid-data.csv?raw=true\")\n\n# Deselect cases/rows with OWID\nowideu &lt;- owideu[!grepl(\"^OWID\", owideu$iso_code), ]\n\n# Subset data for Europe\nowideu &lt;- subset(owideu, continent == \"Europe\")\n\n# Convert the date column to Date type\nowideu$date &lt;- as.Date(owideu$date)\n\n# Extract the year and month from the date\nowideu$year &lt;- format(owideu$date, \"%Y\")\nowideu$month &lt;- format(owideu$date, \"%m\")\n\n# Further subset the data to remove zero deaths and dates before 2024-01-20\ntt &lt;- subset(owideu, new_deaths != 0 & date &lt; \"2024-01-20\")\n\n# Subset the data for specific countries and years, focusing on Germany 2020 and December 2022\noutliers &lt;- tt %&gt;%\n  filter((location == \"Spain\" & year == \"2020\") |\n           (location == \"Germany\" & (year == \"2020\" | (year == \"2022\" & month == \"12\"))) |\n           (location == \"Ukraine\" & year == \"2021\") |\n           (location == \"Italy\" & year == \"2024\"))\n\n# For Spain 2020, select the highest and 3rd highest new deaths, and for others, select the highest\noutliers &lt;- outliers %&gt;%\n  group_by(location, year) %&gt;%\n  filter((location == \"Spain\" & year == \"2020\" & new_deaths %in% sort(new_deaths, decreasing = TRUE)[c(1, 3)]) |\n           (location != \"Spain\" & new_deaths == max(new_deaths, na.rm = TRUE))) %&gt;%\n  ungroup()\n\n# Create the base ggplot\nggplot() +\n  # Germany points (all data for Germany for context)\n  geom_point(data = subset(tt, location == \"Germany\"), aes(x = as.Date(date), y = new_deaths), color = \"violetred1\", size = 0.7) +\n  \n  # Spain points\n  geom_point(data = subset(tt, location == \"Spain\"), aes(x = as.Date(date), y = new_deaths), color = \"violetred1\", size = 0.7) +\n  \n  # Ukraine points\n  geom_point(data = subset(tt, location == \"Ukraine\"), aes(x = as.Date(date), y = new_deaths), color = \"violetred1\", size = 0.7) +\n  \n  # France points\n  geom_point(data = subset(tt, location == \"France\"), aes(x = as.Date(date), y = new_deaths), color = \"violetred1\", size = 0.7) +\n  \n  # All points scaled down by a factor of 6\n  geom_point(data = tt, aes(x = as.Date(date), y = new_deaths / 6), color = \"violetred1\", size = 1.4) +\n  \n  # Customize the axes and labels\n  labs(x = \"Dates\", y = \"COVID Deaths in Europe (Daily)\") +\n  \n  # Customize the date axis and set dynamic date breaks\n  scale_x_date(labels = date_format(\"%Y-%m\"), breaks = pretty_breaks(n = 30)) +\n  \n  # Custom y-axis with breaks up to 6000\n  scale_y_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000), limits = c(0, 6500),\n                     labels = c(\"0\", \"1000\", \"\", \"3000\", \"\", \"5000\", \"\")) +\n  \n  # Apply a minimal theme with customizations for better aesthetics\n  theme_minimal(base_family = \"Palatino\") +\n  theme(\n    axis.text.x = element_text(angle = 90, hjust = 1, family = \"Palatino\"),\n    axis.text.y = element_text(family = \"Palatino\"),\n    axis.title.x = element_text(family = \"Palatino\"),\n    axis.title.y = element_text(family = \"Palatino\"),\n    panel.grid = element_blank(),  # Remove background grid\n    panel.border = element_rect(fill = NA, color = \"black\"),  # Make axis lines are visible\n    axis.ticks.y = element_line(color = \"black\"),  # Show y-axis ticks\n    axis.ticks.length.y = unit(3, \"mm\"),  # Lengthen y-axis ticks\n    axis.ticks.x = element_blank()  # Remove x-axis ticks\n  ) +\n  \n  # Adding labels for the outliers\n  geom_text(data = outliers, aes(x = as.Date(date), y = new_deaths, label = location), \n            vjust = 0, hjust = -0.1, color = \"black\", size = 3, family = \"Palatino\")  # Position the label to the right of the point"
  },
  {
    "objectID": "assignment4.html",
    "href": "assignment4.html",
    "title": "Assignment 4",
    "section": "",
    "text": "# Team GeoVIS\n# Members : Changho Lee, Americo Gamarra, Brennan Stout, Umme Kulsum - Coordinator\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(ggplot2)\ndata &lt;- mpg\nfont &lt;- \"serif\"\n\ndata$model&lt;-paste0(toupper(substr(data$model, 1, 1)), substr(data$model, 2, nchar(data$model)))\ndata$manufacturer&lt;-paste0(toupper(substr(data$manufacturer, 1, 1)), substr(data$manufacturer, 2, nchar(data$manufacturer)))\n## 1st Graph\nlibrary(dplyr)\nlibrary(RColorBrewer)\nuniq &lt;- count(unique(data,vars = c(manufacturer, cty)),vars=manufacturer)\nqual_colors &lt;- colorRampPalette(brewer.pal(9, \"PuRd\"))(20)\nnewdata &lt;- data[ which(data$manufacturer=='ford'), ]\ntotal &lt;- sum(uniq$n)\nwidths &lt;- c()\nfor (m in 1:length(uniq$vars)){\n  widths &lt;- append(widths, (uniq$n[m]/total)*100)\n}\nheights = uniq$n\npar( mar= c(4,4,1,1),family=font )\np &lt;- barplot(heights, widths, space=0, \n             col = qual_colors, xlab = \"Percent of cars\", ylab = \"Number of models\")\ntext(x = p, y = heights/2, labels = uniq$vars, cex=ifelse(uniq$vars%in%c(\"Land rover\",\"Lincoln\",\"Mercury\",\"Pontiac\"),0.5,1), srt=90)\naxis(1, seq(0,100,5))\npolygon(c(42,42,72,72), c(25, 30, 30, 25), col=\"snow\")\ntext(57, 28, \"Percent of market\\nby manufacturer\", cex=1)\n\n\n\n\n\n\n\n## 2nd Graph\n# Get the 6 largest manufacturers by count\ntop_makers &lt;- mpg %&gt;%\n  count(manufacturer) %&gt;%\n  top_n(6, n) %&gt;%\n  pull(manufacturer)\n\n# Filter the data to include only the top 6 manufacturers\nmpg_filtered &lt;- mpg %&gt;%\n  filter(manufacturer %in% top_makers)\n\n# Create the faceted histograms for city mpg\nggplot(mpg_filtered, aes(x = cty)) +\n  geom_histogram(binwidth = 2, fill = \"violetred2\", color = \"white\") +\n  facet_grid(class ~ manufacturer) +  # Facet by class and cylinders\n  labs(x = \"City MPG\", y = \"Count\", title = \"City MPG Distribution by Manufacturer, Class, and Cylinder\", family=font) +\n  theme_minimal() +\n  theme(\n    strip.text = element_text(size = 10,family=font),    # Adjust facet label size\n    panel.spacing = unit(1, \"lines\"),        # Add spacing between facets\n    axis.text.x = element_text(size = 8,family=font),    # Adjust size of x-axis text\n    axis.text.y = element_text(size = 8, family=font),     # Adjust size of y-axis text\n    axis.title.x = element_text(size = 12, family = font),  # Set x-axis label font and size\n    axis.title.y = element_text(size = 12, , family = font),  # Set y-axis label font and size\n    plot.title = element_text(size = 14, family = font, hjust = 0.5),\n    panel.grid = element_blank(),\n    panel.border = element_rect(color = \"gray40\", fill = NA, size = 0.6)\n  )\n\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\n\n\n\n\n\n\n\n## 3rd Graph \nmh &lt;- aggregate(hwy ~ class, data = data, mean)\nmc &lt;- aggregate(cty ~ class, data = data, mean)\n\npar(mfrow = c(1, 2), mar = c(5,6,2,2), mgp = c(4, 1, 0.8), family = font, cex.main = 1.2, \n    cex.lab = 1, font.main = 1, \n    font.lab = 1, font.axis = 1, cex.axis = 0.7)\n\n# mean highway MPG\nbarplot(mh$hwy, names.arg = mh$class,\n        horiz = TRUE, col = \"violetred2\", border = \"black\",\n        xlab = \"Mean MPG\", ylab = \"Type of Vehicle\",\n        xlim = c(0, 35),\n        main = \"Highway\", las = 1)\nabline(v = 0, lwd = 4, col = \"black\") \n\n# mean city MPG\nbarplot(mc$cty, names.arg = mc$class, \n        horiz = TRUE, col = \"white\", border = \"black\", \n        xlab = \"Mean MPG\", ylab = \"\", \n        xlim = c(0, 35),\n        main = \"City\", las = 1)\nabline(v = 0, lwd = 4, col = \"black\") \n\n\n\n\n\n\n\n## 4th Graph\ndata_sum &lt;- mpg %&gt;%\n  group_by(class) %&gt;%\n  summarise(mh = mean(hwy), mc = mean(cty))\n\nggplot(data_sum, aes(x = class)) +\n  geom_col(aes(y = mh), fill = \"violetred2\", width = 0.4, \n           position = position_nudge(x = 0.1)) +\n  geom_col(aes(y = mc), fill = 'white', color = \"black\", \n           width = 0.4, position = position_nudge(x = -0.1)) +\n  labs(x = \"Type of Vehicle\", y = \"Mean Miles per Gallon\", title = \"Mean MPG by Class and Vehicle Type\") +\n  theme_minimal() +\n  theme(panel.grid = element_blank(),axis.line = element_line(color = \"black\"), \n        axis.text.x = element_text(angle = 45, hjust = 1, family = font), \n        axis.text.y = element_text(family = font),\n        axis.title.x = element_text(family = font, size = 12), \n        axis.title.y = element_text(family = font, size = 12), \n        plot.title = element_text(family = font, \n                                  size = 14, hjust = 0.5))"
  },
  {
    "objectID": "assignment4.html#hackathon",
    "href": "assignment4.html#hackathon",
    "title": "Assignment 4",
    "section": "",
    "text": "# Team GeoVIS\n# Members : Changho Lee, Americo Gamarra, Brennan Stout, Umme Kulsum - Coordinator\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(ggplot2)\ndata &lt;- mpg\nfont &lt;- \"serif\"\n\ndata$model&lt;-paste0(toupper(substr(data$model, 1, 1)), substr(data$model, 2, nchar(data$model)))\ndata$manufacturer&lt;-paste0(toupper(substr(data$manufacturer, 1, 1)), substr(data$manufacturer, 2, nchar(data$manufacturer)))\n## 1st Graph\nlibrary(dplyr)\nlibrary(RColorBrewer)\nuniq &lt;- count(unique(data,vars = c(manufacturer, cty)),vars=manufacturer)\nqual_colors &lt;- colorRampPalette(brewer.pal(9, \"PuRd\"))(20)\nnewdata &lt;- data[ which(data$manufacturer=='ford'), ]\ntotal &lt;- sum(uniq$n)\nwidths &lt;- c()\nfor (m in 1:length(uniq$vars)){\n  widths &lt;- append(widths, (uniq$n[m]/total)*100)\n}\nheights = uniq$n\npar( mar= c(4,4,1,1),family=font )\np &lt;- barplot(heights, widths, space=0, \n             col = qual_colors, xlab = \"Percent of cars\", ylab = \"Number of models\")\ntext(x = p, y = heights/2, labels = uniq$vars, cex=ifelse(uniq$vars%in%c(\"Land rover\",\"Lincoln\",\"Mercury\",\"Pontiac\"),0.5,1), srt=90)\naxis(1, seq(0,100,5))\npolygon(c(42,42,72,72), c(25, 30, 30, 25), col=\"snow\")\ntext(57, 28, \"Percent of market\\nby manufacturer\", cex=1)\n\n\n\n\n\n\n\n## 2nd Graph\n# Get the 6 largest manufacturers by count\ntop_makers &lt;- mpg %&gt;%\n  count(manufacturer) %&gt;%\n  top_n(6, n) %&gt;%\n  pull(manufacturer)\n\n# Filter the data to include only the top 6 manufacturers\nmpg_filtered &lt;- mpg %&gt;%\n  filter(manufacturer %in% top_makers)\n\n# Create the faceted histograms for city mpg\nggplot(mpg_filtered, aes(x = cty)) +\n  geom_histogram(binwidth = 2, fill = \"violetred2\", color = \"white\") +\n  facet_grid(class ~ manufacturer) +  # Facet by class and cylinders\n  labs(x = \"City MPG\", y = \"Count\", title = \"City MPG Distribution by Manufacturer, Class, and Cylinder\", family=font) +\n  theme_minimal() +\n  theme(\n    strip.text = element_text(size = 10,family=font),    # Adjust facet label size\n    panel.spacing = unit(1, \"lines\"),        # Add spacing between facets\n    axis.text.x = element_text(size = 8,family=font),    # Adjust size of x-axis text\n    axis.text.y = element_text(size = 8, family=font),     # Adjust size of y-axis text\n    axis.title.x = element_text(size = 12, family = font),  # Set x-axis label font and size\n    axis.title.y = element_text(size = 12, , family = font),  # Set y-axis label font and size\n    plot.title = element_text(size = 14, family = font, hjust = 0.5),\n    panel.grid = element_blank(),\n    panel.border = element_rect(color = \"gray40\", fill = NA, size = 0.6)\n  )\n\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\n\n\n\n\n\n\n\n## 3rd Graph \nmh &lt;- aggregate(hwy ~ class, data = data, mean)\nmc &lt;- aggregate(cty ~ class, data = data, mean)\n\npar(mfrow = c(1, 2), mar = c(5,6,2,2), mgp = c(4, 1, 0.8), family = font, cex.main = 1.2, \n    cex.lab = 1, font.main = 1, \n    font.lab = 1, font.axis = 1, cex.axis = 0.7)\n\n# mean highway MPG\nbarplot(mh$hwy, names.arg = mh$class,\n        horiz = TRUE, col = \"violetred2\", border = \"black\",\n        xlab = \"Mean MPG\", ylab = \"Type of Vehicle\",\n        xlim = c(0, 35),\n        main = \"Highway\", las = 1)\nabline(v = 0, lwd = 4, col = \"black\") \n\n# mean city MPG\nbarplot(mc$cty, names.arg = mc$class, \n        horiz = TRUE, col = \"white\", border = \"black\", \n        xlab = \"Mean MPG\", ylab = \"\", \n        xlim = c(0, 35),\n        main = \"City\", las = 1)\nabline(v = 0, lwd = 4, col = \"black\") \n\n\n\n\n\n\n\n## 4th Graph\ndata_sum &lt;- mpg %&gt;%\n  group_by(class) %&gt;%\n  summarise(mh = mean(hwy), mc = mean(cty))\n\nggplot(data_sum, aes(x = class)) +\n  geom_col(aes(y = mh), fill = \"violetred2\", width = 0.4, \n           position = position_nudge(x = 0.1)) +\n  geom_col(aes(y = mc), fill = 'white', color = \"black\", \n           width = 0.4, position = position_nudge(x = -0.1)) +\n  labs(x = \"Type of Vehicle\", y = \"Mean Miles per Gallon\", title = \"Mean MPG by Class and Vehicle Type\") +\n  theme_minimal() +\n  theme(panel.grid = element_blank(),axis.line = element_line(color = \"black\"), \n        axis.text.x = element_text(angle = 45, hjust = 1, family = font), \n        axis.text.y = element_text(family = font),\n        axis.title.x = element_text(family = font, size = 12), \n        axis.title.y = element_text(family = font, size = 12), \n        plot.title = element_text(family = font, \n                                  size = 14, hjust = 0.5))"
  },
  {
    "objectID": "assignment4.html#synergy-report",
    "href": "assignment4.html#synergy-report",
    "title": "Assignment 4",
    "section": "2. Synergy Report",
    "text": "2. Synergy Report\n\nIntroduction\nThis report outlines the team work done by the members of team GeoVIS. The purpose of this collaboration is to participate in the hackathon in EPPS 6356 course by Dr. Karl Ho.\n\n\nMembers\n\nAmerico Gamarra\nBrennan Stout\nChangho Lee and\nUmme Kulsum (Coorndinator)\n\n\n\nCollaborative Process\nThe hackathon required us to work with our own data and create 4 charts based on the samples provided.\n\nDiscussion regarding data: In class, all members.\n\nChangho and Brennan provided some data sources which we all looked at and discussed about\nChangho suggested to use the mpg data already available in R\nEveryone supported that\nCoordinator suggested members that they could look into other dataset too but they should get started with what they had and if need be, the codes could be employed to a new dataset\nThere were still some confusions, Changho stayed behind in class and talked with the Professor to clear that and later informed the other members\n\n\n\nGetting Started\n\nBrennan and Umme started working on the charts that night\nBrennan created the base for chart 1 and started working on chart 2\nUmme completed chart 3 and 4\n\n\n\nFine-tuning\n\nChangho inspected all charts and provided feedback\nThere was confusion about the contents of chart 2\nChangho redid the chart 2 and compiled the codes in a single file\nBrennan fine-tuned the fonts and sizes\nUmme fine-tuned the colors\nBefore and after changing anything, members took each other’s approval\n\n\n\n\nSynergistic Effect\nThe team had created a base for all the charts within 3 hours after the class. Chart 2 was a bit confusing to Brennan and Umme. Discussing about the materials provided by Dr. Karl Ho among themselves helped clearing that confusion. Therefore, new things were learned. Each team member would get feedback from the others after completing each task and tried to implement those.\n\n\nResult and Outcome\n\nCompleting the hackathon ahead of time\nTeam bonding became stronger\nEach member got the opportunity to enrich the knowledge of R programming and data analysis\n\n\n\nSubmission and synergy report Writing: Umme Kulsum"
  },
  {
    "objectID": "preparefclass7.html",
    "href": "preparefclass7.html",
    "title": "Prepare for Class 7",
    "section": "",
    "text": "Literate programming, introduced by Dr. Knuth in 1984, is a practice where he put emphasis on writing it as a narrative and explaining how the program is working and why the programmer has taken certain decisions. It is not just documenting/commenting on the code but an explanation of the code itself facilitating the reproducibility of the graphs, charts, equations, analysis as well as communication among programmers."
  },
  {
    "objectID": "preparefclass7.html#literate-programming",
    "href": "preparefclass7.html#literate-programming",
    "title": "Prepare for Class 7",
    "section": "",
    "text": "Literate programming, introduced by Dr. Knuth in 1984, is a practice where he put emphasis on writing it as a narrative and explaining how the program is working and why the programmer has taken certain decisions. It is not just documenting/commenting on the code but an explanation of the code itself facilitating the reproducibility of the graphs, charts, equations, analysis as well as communication among programmers."
  },
  {
    "objectID": "preparefclass7.html#stephen-malinowskis-music-visualization",
    "href": "preparefclass7.html#stephen-malinowskis-music-visualization",
    "title": "Prepare for Class 7",
    "section": "2. Stephen Malinowski’s Music Visualization",
    "text": "2. Stephen Malinowski’s Music Visualization\nThe music visualization may be shows 4 instruments.\n\nCello\nViolin\nPiano\nTrumpet\n\nIt starts with a cello/violin may be, something with a sharp tone. The volume is visible as the size of the bubble\nDeep and deeper tone instruments have been introduced later\nPiano may have been the last instrument to have been played\n\nObservation\n\nSome smaller bubbles (notes with lower volume) are embedded in larger bubbles (notes with higher volumes)\nLarger bubbles move slower and covers more distance\nThe bar graph that is shown in the last part of the video, the length of the bar represents the duration of the note"
  },
  {
    "objectID": "preparefclass7.html#four-pillars-of-visualization",
    "href": "preparefclass7.html#four-pillars-of-visualization",
    "title": "Prepare for Class 7",
    "section": "3. Four Pillars of Visualization",
    "text": "3. Four Pillars of Visualization\nNoah Illinsky from the Center for Advanced Visualization at IBM, mentioned that to visualize something successfully it\n\nNeeds a clear purpose\nOnly relevent content needs to be included\nNeed a structure that is suitable and appropriate\nFormatting needs to be of use"
  }
]